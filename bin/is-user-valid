#!/usr/bin/env node
var app = require('../lib/is-user-valid'),
    http = require('http'),
    enableTerminate = require('server-terminate'),
    logger = require('../lib/logger'),
    config = require('../lib/config');


//TODO: Very silly, review this and add configuration options and things like that
process.env.NODE_ENV = 'production';
process.env.LOGOPS_FORMAT = 'json';
process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;

if (process.argv.indexOf('--version') > 0) {
  var fs = require('fs');
  var path = require('path');

  var pkgFilePath = path.join(__dirname, '..', 'package.json');
  var pkg = JSON.parse(fs.readFileSync(pkgFilePath));
  console.log(pkg.version + ' (' + pkg.releaseName + ')');

  process.exit(0);
}

var server = http.createServer(app);
// Allow the server to gracefully finish connections without waiting for
// keep-alive connections that are not being used
enableTerminate(server);
server.listen(config.get('port'), function() {
  logger.info('is-user-valid server listening', server.address());
});

function orderedShutdown() {
  logger.debug('ordered shutdown');
  server.terminate(function onTerminated() {
    process.exit(0);
  });
}

process.on('SIGTERM', orderedShutdown);
process.on('SIGINT', orderedShutdown);
process.on('uncaughtException', function(err) {
  logger.fatal(err);
  process.exit(2);
});
